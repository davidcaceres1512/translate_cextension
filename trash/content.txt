// Selecciona el contenedor de subtítulos usando el atributo data-purpose
let subtitleContainer = document.querySelector('[data-purpose="captions-cue-text"]');

// Variable para almacenar el último texto traducido, para evitar traducciones repetidas
let lastSubtitleText = "";

// Función que inicia la observación de los subtítulos
function startObservingSubtitles() {
  if (subtitleContainer) {
    // Observador de mutaciones para detectar cambios en los subtítulos
    const observer = new MutationObserver(mutations => {
      mutations.forEach(mutation => {
        let subtitleText = mutation.target.innerText.trim();

        // Solo traducimos si el texto ha cambiado y no es vacío
        if (subtitleText !== '' && subtitleText !== lastSubtitleText) {
          lastSubtitleText = subtitleText;

          // Limita la cantidad de traducciones, usando throttle para evitar sobrecarga
          throttleTranslate(subtitleText);
        }
      });
    });

    observer.observe(subtitleContainer, { subtree: true, characterData: true, childList: true });

    // Reobservación dinámica: Si el contenedor cambia, vuelve a seleccionar y observar
    const reobserver = new MutationObserver(() => {
      const newSubtitleContainer = document.querySelector('[data-purpose="captions-cue-text"]');
      if (newSubtitleContainer && newSubtitleContainer !== subtitleContainer) {
        subtitleContainer = newSubtitleContainer;
        observer.disconnect(); // Desconectar el observador anterior
        startObservingSubtitles(); // Iniciar la observación en el nuevo contenedor
      }
    });

    // Observamos cambios en todo el body para detectar si el contenedor de subtítulos cambia
    reobserver.observe(document.body, { childList: true, subtree: true });
  }
}

// Función de throttle para limitar las llamadas a la API de traducción
let throttleTimeout;
function throttleTranslate(text) {
  if (!throttleTimeout) {
    throttleTimeout = setTimeout(() => {
      translateText(text).then(translatedText => {
        // Mostrar los subtítulos traducidos
        displayTranslatedSubtitle(translatedText);
      });
      throttleTimeout = null;
    }, 1000); // Espera 1 segundo antes de permitir otra traducción
  }
}

// Función para traducir los subtítulos (puedes usar LibreTranslate, MyMemory, etc.)
async function translateSubtitle(text) {
  const apiKey = 'TU_API_KEY'; // Reemplaza con tu clave API si usas una API de traducción
  const url = `https://libretranslate.com/translate`; // Cambia por la URL de la API que elijas

  const response = await fetch(url, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      q: text,
      source: 'en',
      target: 'es', // Cambia el idioma objetivo según sea necesario
      alternatives: 3,
	  api_key: ""
    }),
  });

  const data = await response.json();
  return data.translatedText; // Ajusta según el formato de respuesta de la API
}

async function translateText(text, targetLang = 'es') {
    try {
      const response = await fetch('https://libretranslate.de/translate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          q: text,
          source: 'en', // Idioma fuente
          target: targetLang // Idioma objetivo
        })
      });
  
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
  
      const data = await response.json();
      return data.translatedText || 'No translation found';
    } catch (error) {
      console.error('Error during translation:', error);
      return 'Translation error';
    }
  }
  
  // Ejemplo de uso
  translateText('Hello, world!').then(translatedText => {
    console.log('Translated Text:', translatedText);
  });
  
  

// Función para mostrar los subtítulos traducidos
function displayTranslatedSubtitle(text) {
  let translatedSubtitleElement = document.getElementById('translated-subtitle');

  if (!translatedSubtitleElement) {
    translatedSubtitleElement = document.createElement('div');
    translatedSubtitleElement.id = 'translated-subtitle';
    translatedSubtitleElement.style.position = 'absolute';
    translatedSubtitleElement.style.bottom = '10%';
    translatedSubtitleElement.style.width = '100%';
    translatedSubtitleElement.style.textAlign = 'center';
    translatedSubtitleElement.style.color = 'yellow';
    translatedSubtitleElement.style.fontSize = '20px';
    translatedSubtitleElement.style.textShadow = '2px 2px 4px #000000';
    document.body.appendChild(translatedSubtitleElement);
  }

  translatedSubtitleElement.innerText = text;
}

// Iniciar la observación de subtítulos
startObservingSubtitles();
